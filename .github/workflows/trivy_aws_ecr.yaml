---
name: Trivy AWS ECR

on:
  #push:
  #  branches:
  #    - master
  #    - main
  #pull_request:
  #  branches:
  #    - master
  #    - main
  workflow_call:
    inputs:
      repo:
        description: The ECR repository, without the 'xxx.dkr.ecr.<region>.amazonaws.com' prefix
        type: string
        required: true
      severity:
        description: Set a severity to trigger CI workflow failure
        type: string
        default: HIGH,CRITICAL
        required: false
      no_sarif:
        description: Disable GitHub Security tab integration to avoid spamming it with tonnes of OS CVEs in docker images
        type: boolean
        default: false
        required: false
      debug:
        type: boolean
        required: false
        default: false
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true
  workflow_dispatch:
    inputs:
      repo:
        description: The ECR repository, without the 'xxx.dkr.ecr.<region>.amazonaws.com' prefix
        type: string
        required: true
      severity:
        description: Set a severity to trigger CI workflow failure
        type: string
        default: HIGH,CRITICAL
        required: false
      no_sarif:
        description: Disable GitHub Security tab integration to avoid spamming it with tonnes of OS CVEs in docker images
        type: boolean
        default: false
        required: false
      debug:
        type: boolean
        required: false
        default: false
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true
  schedule:
    - cron: '0 0 * * 1'

permissions:
  actions: read
  contents: read
  security-events: write

defaults:
  run:
    shell: bash -euxo pipefail {0}

env:
  REPO: ${{ inputs.repo || github.events.inputs.repo }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  DEBUG: ${{ inputs.debug || github.event.inputs.debug || '' }}

jobs:
  trivy:
    name: Trivy AWS ECR
    runs-on: ubuntu-latest
    steps:
      - name: Environment
        run: env | sort

      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Generate environment variable AWS_ACCOUNT_ID
        run: echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity | jq -r .Account)" >> "$GITHUB_ENV"
      - name: Generate environment variable AWS_ECR_REGISTRY
        run: echo "AWS_ECR_REGISTRY=${{env.AWS_ACCOUNT_ID}}.dkr.ecr.${{env.AWS_DEFAULT_REGION}}.amazonaws.com" >> "$GITHUB_ENV"
      - name: Generate environment variable DOCKER_IMAGE
        run: echo "DOCKER_IMAGE=${{ env.AWS_ECR_REGISTRY }}/${{ env.REPO }}" >> "$GITHUB_ENV"

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.AWS_ECR_REGISTRY }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Trivy (Full Informational)
        run: |
          # informational to see all issues
          trivy image --no-progress "$TARGET"

      - name: Run Trivy vulnerability scanner to generate sarif
        if: ${{ ! ( inputs.no_sarif || github.event.inputs.sarif ) }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          format: template
          template: '@/contrib/sarif.tpl'
          output: trivy-results.sarif
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Upload Trivy sarif scan results to GitHub Security tab
        if: ${{ ! ( inputs.no_sarif || github.event.inputs.sarif ) }}
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: trivy-results.sarif

      - name: Trivy (with Severity Error Out)
        if: ${{ inputs.severity || github.event.inputs.severity }}
        env:
          SEVERITY: ${{ inputs.severity | github.event.inputs.severity }}
        run: |
          # fail the pipeline if any of the issues are in $SEVERITY eg. HIGH,CRITICAL
          trivy image --no-progress --exit-code 1 --severity "$SEVERITY" "$TARGET"
